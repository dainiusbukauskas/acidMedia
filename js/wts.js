function runThePage() {
  console.log("Loading from navigation.");
  
  console.log(location);
  
  
  console.log("wfdsa s gfds gfds fdgs gfds");

  //if (location.pathname == "/" ) {
	  if (true) {
	  console.log("we at the slash.");
    if (location.hash == "#list" || location.hash == "") { // if the user specifies list view or doesn't specify, we take them to list view.
      $("#browseBar").show();
      popstate = {state : {url_key : "#list"}};
      history.replaceState(popstate.state,"Whole-Timber Videos List View","#list");
      //alert("replace state! - " + popstate.state.url_key);
      loadJSONhttp(sortBy,popstate);
    } else {
      // ok so someone navigated to a video specifically intending to visit it...
      popstate = {state : {url_key : location.hash}};
      loadJSONhttp(sortBy,popstate);
    }
  } else {	
    $("#browseBar").hide();
  }  
}

window.onpopstate = function(popstate) {
  
  if (popstate.state != null) {
    //alert("pop! " + popstate.state.url_key); 
    loadJSONhttp(sortBy,popstate);

  }
  else {
    //ok so clearly this popstate was generated by a browser url change.
    // so let's treat it differently...
    // ok so someone navigated to a video specifically intending to visit it...
      popstate = {state : {url_key : location.hash}};
      loadJSONhttp(sortBy,popstate);

  }
  
};

var spreadsheetID = '1yyu48x9PxIH_jYmjEpCYM25LaHb0bEllvYNYN4HXGAE';
var sortBy = 'Architect';

///Use this function to load the single video view.
function loadVideo(video, popstate) {

  $("#browseBar").hide();

  if (popstate.state.url_key != video.url_key) {
    history.pushState(video,video.name,video.url_key);
    //alert("push! - " + history.state.url_key);
  }
  
  document.getElementById("article").scrollTop = -1000;

  console.log("Loading video:");
  console.log(video);

  var singleVideo = [];
  singleVideo.push(video);

  console.log("Here is what singleVideo looks like:");
  console.log(singleVideo);
  
  addElement(singleVideo,"single");

  
  return;
}

///Use this function to load the multiple videos view.
function loadVideos(jsonData,sortBy,popstate) {
  

  if (popstate.state.url_key != '#list') {
    popstate = {state : {url_key : '#list'}};
    history.pushState(popstate.state,"Whole-Timber Videos List View","#list");
    //alert("push!" + popstate.state.url_key);
  } // just to remember if we were looking at the list view

  $("#browseBar").show();
  addElement(jsonData,sortBy);    //2nd parameter is sortBy;
  
  //attempting to scroll up...
  document.getElementById("article").scrollTop = 0;

  return;
}


function loadJSONhttp(sortBy, popstate) {


//    console.log("browseBar inside loadhttp function");
//      console.log($("#browseBar"));

var url = "https://spreadsheets.google.com/feeds/list/" + spreadsheetID + "/od6/public/values?alt=json";

$.getJSON(url, function(data) {
  console.log(data);

  var entries = data.feed.entry;

  console.log(entries);

  var videos = [];

  entries.forEach(function (entry) {
      var video = {
        number: entry.gsx$number.$t,
        title: entry.gsx$title.$t, 
        url_key: entry.gsx$urlkey.$t,
        //architect: entry.gsx$architect.$t,
        //description: entry.gsx$descriptiononlyaurimashaswriteaccess.$t,
        //main_image: entry.gsx$mainimagepath.$t,
        //year_completed: entry.gsx$yearcompleted.$t
		};

     

        //If there is a question mark in the data, scrub it.?
      //if (structure.name.includes("?") || structure.name.toLowerCase().includes("unknown")) {structure.name = "";}
//      if (structure.location.includes("?") || structure.location.toLowerCase().includes("unknown")) {structure.location = "";}
 //     if (structure.url_key.includes("?") || structure.url_key.toLowerCase().includes("unknown")) {structure.url_key = "";}
   //   if (structure.architect.includes("?") || structure.architect.toLowerCase().includes("unknown")) {structure.architect = "";}
    //  if (structure.description.includes("?") || structure.description.toLowerCase().includes("unknown")) {structure.description = "";}
     // if (structure.main_image.includes("?") || structure.main_image.toLowerCase().includes("unknown")) {structure.main_image = "";}
      //if (structure.year_completed.includes("?") || structure.year_completed.toLowerCase().includes("unknown")) {structure.year_completed = "";}

      videos.push(video);
  });


  //if (popstate.state.url_key == "#lisasdfasdfasdft") { } else { console.log("else works!");}
  console.log("here is what popstate looks like prior to checking:" );
  console.log(popstate);
  if (popstate.state.url_key == "#list") { //If we are on the main page, just load all the videos in some sort order.
      console.log("popstate.state.url_key == '#list'");
      loadVideos(videos,sortBy,popstate);
      //return;
    } else { //if not, check 
      console.log("popstate.state.url_key != '#list'");
      console.log("Running in else loop...");

      console.log("Ok its not list view... so let's check the videos list to find the matching structure...");
      console.log(videos);
      console.log(popstate);
      
      videoFound = false;
      videos.forEach(function(video){
        
        if (popstate.state.url_key == video.url_key) {
          console.log("Great. 'popstate.state corresponds to: " + video.name);
          console.log("sending request to load that video.");
          loadVideo(video, popstate);x
          videoFound = true;
        }
      });
      if (videoFound == false) { // if we can't find a video with that URL key just take 
        $("#browseBar").hide();
        console.log("NO STRUCTURE FOUND WITH THAT URL_KEY.");
        //$(#error)
        errorMessage = document.createElement("div");
        errorMessage.innerHTML = "Sorry, there is no video under that URL."
        $("#article").empty();
        document.getElementById("article").appendChild(errorMessage); 

      }
    }

 }).error(function(jqXHR, textStatus, errorThrown) {
        console.log("error " + textStatus);
        console.log("incoming Text " + jqXHR.responseText);
        console.log("errorThrown: " + errorThrown);
    });

}

function addElement (jsonDataToBeDisplayed, sortBy) { 

  //console.log("try to empty!");
  $("#article").empty(); // make sure that the article is empty before we repopulate it. // note that $().empty seems to only accept class or document element types as arguments. Not ID's!

  var entries = document.createElement("div");
  entries.scrollTop = 0; 

  switch (sortBy) { // depending on which sort parameter we give it.
    case "single": //we are displaying a single video so sorting is irrelevant.
      break;
    case "name":
      jsonDataToBeDisplayed = sortVideosByName(jsonDataToBeDisplayed);
      break;
    case "year":
      jsonDataToBeDisplayed = sortVideosByYear(jsonDataToBeDisplayed);
      break;
    case "architect":
      jsonDataToBeDisplayed = sortVideosByArchitect(jsonDataToBeDisplayed);
    break;
     
  }

  jsonDataToBeDisplayed.forEach(function (video) { //Now we iterate through the list of videos inside jsonDataToBeDisplayed!

    var entry = document.createElement("div"); 
    entry.className = "entry";
	/*
    var main_image_link_wrapper = document.createElement("a");
    
    main_image_link_wrapper.onclick = function() {
      
      loadVideo(video, popstate);
    }

    var main_image = document.createElement("img");
    main_image_link_wrapper.appendChild(main_image);
    entry.appendChild(main_image_link_wrapper);
    main_image.src = "../images/" + video.main_image;
    main_image.className = "mainVideoImage";
    //main_image.style = "width:304px;height:228px;";
    main_image.alt = video.main_image; */

    var name = document.createElement("div"); 
    entry.appendChild(name); 
    name.innerHTML = video.name;
    name.className = "name";
  
  /*
    var location = document.createElement("div"); 
    entry.appendChild(location); 
    if (video.location != "" && video.location.toLowerCase() != "unknown") {location.innerHTML = video.location;} else {location.innerHTML = "Unknown Location";}
    location.className = "location";
  
    var year_completed = document.createElement("div"); 
    entry.appendChild(year_completed); 
    year_completed.innerHTML = video.year_completed;
    if (video.year_completed != "" && video.year_completed.toLowerCase() != "unknown") {year_completed.innerHTML = video.year_completed;} else {year_completed.innerHTML = "Unknown Year";}
    year_completed.className = "year_completed";
  
    var architect = document.createElement("div"); 
    entry.appendChild(architect); 
    architect.innerHTML = video.architect;
    if (video.architect != "" && video.architect.toLowerCase() != "unknown") {architect.innerHTML = video.architect;} else {architect.innerHTML = "Unknown Architect";}
    architect.className = "architect";

    var description = document.createElement("div"); 
    entry.appendChild(description); 
    description.innerHTML = video.description;
    if (video.description != "" && video.description.toLowerCase() != "n/a") {description.innerHTML = video.description;} else {description.innerHTML = "No description available.";}
    description.className = "description"; */

    entries.appendChild(entry); //Add the entry for this video to the list of entries.
  });

  document.getElementById("article").appendChild(entries); //Add the list of entries that we have generated.
  document.getElementById("article").scrollTop = 0;
}




//This code can be made slicker but you get the idea. Doesn't seem too tricky! 
function sortVideosByArchitect(jsonData) {
  console.log("Sorting videos by architect.");
  console.log("Here is the order before sorting:");
  console.log(jsonData);
  jsonData.sort(function(a,b){ //custom sort function. sort by some parameter inside the video element within jsonData.
    if (a.architect == '' && b.architect != ''){
      return -1;
    }
    if (b.architect == '' && a.architect != ''){
      return 1;
    }
    if (a.architect < b.architect){
      return - 1;
    } 
    if (a.architect > b.architect) {
      return 1;
    }

    return 0;

  });
  console.log("Here is the order after sorting:");
  console.log(jsonData);
  return jsonData;
}

function sortVideosByName(jsonData) {
  console.log("Sorting videos by name.");
  console.log("Here is the order before sorting:");
  console.log(jsonData);
  jsonData.sort(function(a,b){
    if (a.name == '' && b.name != ''){
      return -1;
    }
    if (b.name == '' && a.name != ''){
      return 1;
    }
    if (a.name < b.name){
      return - 1;
    } 
    if (a.name > b.name) {
      return 1;
    }

    return 0;

  });
  console.log("Here is the order after sorting:");
  console.log(jsonData);
  return jsonData;
}

function sortVideosByYear(jsonData) {
  console.log("Sorting videos by year.");
  console.log("Here is the order before sorting:");
  console.log(jsonData);
  jsonData.sort(function(a,b){
    if (a.year_completed == '' && b.year_completed != ''){
      return -1;
    }
    if (b.year_completed == '' && a.year_completed != ''){
      return 1;
    }
    if (a.year_completed < b.year_completed){
      return - 1;
    } 
    if (a.year_completed > b.year_completed) {
      return 1;
    }

    return 0;

  });
  console.log("Here is the order after sorting:");
  console.log(jsonData);
  return jsonData;

}


